{"version":3,"sources":["pages/Landing/landing.js","components/Intro/Intro.js","components/Deutsche/Deutsche.js","components/Fonbnk/Fonbnk.js","components/NCSU/NCSU.js","components/Hobbies/Hobbies.js","pages/About/parallax.js","pages/About/about.js","pages/Contact/contact.js","pages/Lost/lost.js","App.js","serviceWorker.js","index.js"],"names":["Landing","Intro","Deutsche","Fonbnk","NCSU","Hobbies","url","name","wrap","MyParallax","ref","parallax","pages","offset","speed","style","backgroundColor","background","factor","backgroundImage","backgroundSize","onClick","scrollTo","display","alignItems","justifyContent","React","Component","About","Contact","Lost","App","path","exact","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uPAOeA,EALC,WAEd,OAAO,yC,uCCIMC,G,MAJD,WACZ,OAAO,0CAHY,+CAGZ,SC8BMC,EAjCE,WACf,OACE,6BACE,wFACA,4BACE,4BACE,gmBAYF,4BACE,iaCaKC,EAhCA,WACb,OACE,6BACE,sFACA,4BACE,4BACE,gnBAYF,4BACE,yVCaKC,EAhCF,WACX,OACE,6BACE,4DACA,sEACA,4BACE,4BACE,kIAKF,4BACE,+IAKF,4BACE,kTCYKC,EA/BC,WACd,OACE,6BACE,wDACA,4BACE,4BACE,8PAOF,4BACE,kSAOF,4BACE,kGCbJC,EAAM,SAACC,GAAD,IAAOC,EAAP,wEAERA,EAAO,OAAS,GAFR,2DAGyCD,EAHzC,eAIRC,EAAO,IAAM,KAoKFC,E,uKA9IH,IAAD,OACP,OACE,kBAAC,WAAD,CAAUC,IAAK,SAACA,GAAD,OAAU,EAAKC,SAAWD,GAAME,MAAO,GACpD,kBAAC,gBAAD,CACEC,OAAQ,EACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,EACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,GACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,GACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,EACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,IACRC,MAAO,EACPC,MAAO,CAAEE,WAAY,uCAEvB,kBAAC,gBAAD,CACEJ,OAAQ,EACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,IACRC,MAAO,EACPC,MAAO,CAAEE,WAAY,uCAEvB,kBAAC,gBAAD,CACEJ,OAAQ,EACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,IACRC,MAAO,EACPC,MAAO,CAAEE,WAAY,uCAEvB,kBAAC,gBAAD,CACEJ,OAAQ,EACRC,MAAO,EACPC,MAAO,CAAEC,gBAAiB,aAE5B,kBAAC,gBAAD,CACEH,OAAQ,IACRC,MAAO,EACPC,MAAO,CAAEE,WAAY,uCAGvB,kBAAC,gBAAD,CACEJ,OAAQ,EACRC,MAAO,EACPI,OAAQ,EACRH,MAAO,CACLI,gBAAiBb,EAAI,SAAS,GAC9Bc,eAAgB,WAIpB,kBAAC,gBAAD,CACEP,OAAQ,EACRC,MAAO,GACPO,QAAS,kBAAM,EAAKV,SAASW,SAAS,IACtCP,MAAO,CACLQ,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,kBAAC,EAAD,OAEF,kBAAC,gBAAD,CACEZ,OAAQ,EACRC,MAAO,GACPO,QAAS,kBAAM,EAAKV,SAASW,SAAS,IACtCP,MAAO,CACLQ,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,kBAAC,EAAD,OAGF,kBAAC,gBAAD,CACEZ,OAAQ,EACRC,MAAO,GACPO,QAAS,kBAAM,EAAKV,SAASW,SAAS,IACtCP,MAAO,CACLQ,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,kBAAC,EAAD,OAGF,kBAAC,gBAAD,CACEZ,OAAQ,EACRC,MAAO,GACPO,QAAS,kBAAM,EAAKV,SAASW,SAAS,IACtCP,MAAO,CACLQ,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,kBAAC,EAAD,OAEF,kBAAC,gBAAD,CACEZ,OAAQ,EACRC,MAAO,GACPO,QAAS,kBAAM,EAAKV,SAASW,SAAS,IACtCP,MAAO,CACLQ,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBL,eAAgB,UAGlB,kBAAC,EAAD,Y,GAxIeM,IAAMC,WC1BhBC,EAPD,WAIZ,OAAO,kBAAC,EAAD,OCAMC,EALC,WAEd,OAAO,yCCGMC,EALF,WAEX,OAAO,2DCcMC,EAXH,kBACV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWN,IACjC,kBAAC,IAAD,CAAOI,KAAK,WAAWE,UAAWlC,IAClC,kBAAC,IAAD,CAAOgC,KAAK,WAAWE,UAAWL,IAClC,kBAAC,IAAD,CAAOM,OAAQL,OCDDM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7c810a74.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Landing = () => {\r\n  const style = {};\r\n  return <div>Landing</div>;\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\n\r\nconst objStatement = \"CHEESEY_OBJECTIVE_STATEMENT_ABOUT_MY_PASSION\";\r\n\r\nconst Intro = () => {\r\n  return <div>{`\\`\\$\\{${objStatement}\\}\\``}</div>;\r\n};\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\n\r\nconst Deutsche = () => {\r\n  return (\r\n    <div>\r\n      <h1>Full Stack Engineer for the AI/ML team at Deutsche Bank.</h1>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            Our team is focused on building machine learning (ML) models for\r\n            front office users in the global Origination & Advisory division at\r\n            Deutsche Bank. We strive to make our infrastructure reusable so\r\n            other dev teams across the bank can easily get started with their\r\n            own ML projects. My job consists of 2 main aspects. Developing\r\n            microservices (FastApi) for uploading/storing/serving these models.\r\n            Developing the UI (React.js) where users can provide input to a\r\n            model, receive feedback from the model in the form of graphs/charts\r\n            (D3/Chart.js), and upload ML models of their own.\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <h5>\r\n            My favorite project I've worked on was setting up health checks for\r\n            our scikit-learn models. What I designed was a system where the user\r\n            has to include a test suite when they upload one of their models.\r\n            The test suite runs against the model at the time of upload to make\r\n            sure the model functions as expected. The test suite is also run\r\n            when the model is asked to make a prediction.\r\n          </h5>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deutsche;\r\n","import React from \"react\";\r\n\r\nconst Fonbnk = () => {\r\n  return (\r\n    <div>\r\n      <h1>Full Stack Engineer for Fonbnk (Voluntary Side Hussle)</h1>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            In many developing countries people rely on the use of prepaid SIM\r\n            cards to connect to the internet. If someone buys airtime from\r\n            Provider X they become tied to X. Fonbnk was created so users are\r\n            not tied to a provider, rather they buy virtualized airtime from us\r\n            to use at their discretion whether it is converting it into internet\r\n            access, sending it to friends, or storing it for later use. We also\r\n            have integrated our services with a Facebook Messenger Chatbot so\r\n            users can access our application whenever they need without\r\n            requiring them to download any extra application to get started.\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <h5>\r\n            I am 1 of 3 developers who have turned this idea into a reality, and\r\n            I do it all in my spare time. Mainly my work is spent\r\n            building/deploying new services (Node.js/Google Cloud App Engine),\r\n            and updating our front-end to incorporate these services\r\n            (React.js/Firebase). At the time of writing we have ~7k users.\r\n          </h5>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fonbnk;\r\n","import React from \"react\";\r\n\r\nconst NCSU = () => {\r\n  return (\r\n    <div>\r\n      <h1>B.S. in CSC from NCSU in '18</h1>\r\n      <h6>(Apologies for too many abbreviations)</h6>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            My favorite courses were Intro to AI, Discrete Math, Numerical\r\n            Analysis and Software Engineering.\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <h3>\r\n            Languages Used at University: Java(0.7), C(0.2), JavaScript(0.1),\r\n            Floating Point Precision(0.0000000000000001)\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <h5>\r\n            I was a TA for the CSC Department at NCSU for one semester in an\r\n            introductory computer science course. The course covered basic\r\n            knowledge of Linux terminals and HTML/CSS. I chose a course that\r\n            would also let me be the lecturer because I find teaching concepts\r\n            enjoyable.\r\n          </h5>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NCSU;\r\n","import React from \"react\";\r\n\r\nconst Hobbies = () => {\r\n  return (\r\n    <div>\r\n      <h1>So who am I as a person?</h1>\r\n      <ul>\r\n        <li>\r\n          <h3>\r\n            I love being active such as playing soccer, golfing, hiking with my\r\n            dog, playing basketball, biking, running with my dog, kayaking,\r\n            climbing. My latest adventure was driving to Colorado (from NC) for\r\n            2 weeks to go hiking.\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <h3>\r\n            I love learning (shout out to Medium and Youtube), and am constantly\r\n            trying to better myself. This isn't just tech, but all sorts of\r\n            things. I've recently rediscovered my love for books. I just\r\n            finished this Brilliant Darkness and am now reading Happy City.\r\n          </h3>\r\n        </li>\r\n        <li>\r\n          <h3>\r\n            Nothing beats a good beer and good conversations with friends.\r\n          </h3>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hobbies;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Parallax, ParallaxLayer } from \"react-spring/renderprops-addons\";\r\nimport \"./styles.css\";\r\nimport Intro from \"../../components/Intro/Intro\";\r\nimport Deutsche from \"../../components/Deutsche/Deutsche\";\r\nimport Fonbbnk from \"../../components/Fonbnk/Fonbnk\";\r\nimport NCSU from \"../../components/NCSU/NCSU\";\r\nimport Hobbies from \"../../components/Hobbies/Hobbies\";\r\n\r\n// Little helpers ...\r\nconst url = (name, wrap = false) =>\r\n  `${\r\n    wrap ? \"url(\" : \"\"\r\n  }https://awv3node-homepage.surge.sh/build/assets/${name}.svg${\r\n    wrap ? \")\" : \"\"\r\n  }`;\r\nconst Pink = ({ children }) => (\r\n  <span style={{ color: \"#FF6AC1\" }}>{children}</span>\r\n);\r\nconst Yellow = ({ children }) => (\r\n  <span style={{ color: \"#EFF59B\" }}>{children}</span>\r\n);\r\nconst Lightblue = ({ children }) => (\r\n  <span style={{ color: \"#9AEDFE\" }}>{children}</span>\r\n);\r\nconst Green = ({ children }) => (\r\n  <span style={{ color: \"#57EE89\" }}>{children}</span>\r\n);\r\nconst Blue = ({ children }) => (\r\n  <span style={{ color: \"#57C7FF\" }}>{children}</span>\r\n);\r\nconst Gray = ({ children }) => (\r\n  <span style={{ color: \"#909090\" }}>{children}</span>\r\n);\r\n\r\nclass MyParallax extends React.Component {\r\n  render() {\r\n    return (\r\n      <Parallax ref={(ref) => (this.parallax = ref)} pages={5}>\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={1}\r\n          style={{ backgroundColor: \"#3c3b5c\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0}\r\n          style={{ backgroundColor: \"#3c3b5c\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={0.5}\r\n          speed={0}\r\n          style={{ backgroundColor: \"#3c3b5c\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={0.5}\r\n          speed={0}\r\n          style={{ backgroundColor: \"#3c3b5c\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={1}\r\n          speed={1}\r\n          style={{ backgroundColor: \"#3c3b5c\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={1.5}\r\n          speed={0}\r\n          style={{ background: \"linear-gradient(#3c3b5c, #7b3c59)\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={2}\r\n          speed={1}\r\n          style={{ backgroundColor: \"#7b3c59\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={2.5}\r\n          speed={0}\r\n          style={{ background: \"linear-gradient(#7b3c59, #d53939)\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={3}\r\n          speed={1}\r\n          style={{ backgroundColor: \"#d53939\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={3.5}\r\n          speed={0}\r\n          style={{ background: \"linear-gradient(#d53939, #ff9900)\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={4}\r\n          speed={1}\r\n          style={{ backgroundColor: \"#ff9900\" }}\r\n        />\r\n        <ParallaxLayer\r\n          offset={4.5}\r\n          speed={0}\r\n          style={{ background: \"linear-gradient(#ff9900, #7b3c59)\" }}\r\n        />\r\n\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0}\r\n          factor={5}\r\n          style={{\r\n            backgroundImage: url(\"stars\", true),\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        />\r\n\r\n        <ParallaxLayer\r\n          offset={0}\r\n          speed={0.1}\r\n          onClick={() => this.parallax.scrollTo(1)}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Intro />\r\n        </ParallaxLayer>\r\n        <ParallaxLayer\r\n          offset={1}\r\n          speed={0.1}\r\n          onClick={() => this.parallax.scrollTo(2)}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Deutsche />\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          offset={2}\r\n          speed={0.1}\r\n          onClick={() => this.parallax.scrollTo(3)}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Fonbbnk />\r\n        </ParallaxLayer>\r\n\r\n        <ParallaxLayer\r\n          offset={3}\r\n          speed={0.1}\r\n          onClick={() => this.parallax.scrollTo(4)}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <NCSU />\r\n        </ParallaxLayer>\r\n        <ParallaxLayer\r\n          offset={4}\r\n          speed={0.1}\r\n          onClick={() => this.parallax.scrollTo(0)}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n          <Hobbies />\r\n        </ParallaxLayer>\r\n      </Parallax>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyParallax;\r\n","import React from \"react\";\r\nimport MyParallax from \"./parallax\";\r\n\r\nconst About = () => {\r\n  const style = {};\r\n  // Cartoon head with parallax scroll where ideas fall out\r\n  //Head will be where earth is, but will be more fixed to bottom of screen\r\n  return <MyParallax />;\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n  const style = {};\r\n  return <div>Contact</div>;\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\n\r\nconst Lost = () => {\r\n  const style = {};\r\n  return <div>You are lost my friend...</div>;\r\n};\r\n\r\nexport default Lost;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Landing from \"./pages/Landing/landing\";\nimport About from \"./pages/About/about\";\nimport Contact from \"./pages/Contact/contact\";\nimport Lost from \"./pages/Lost/lost\";\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={About} />\n      <Route path=\"/landing\" component={Landing} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route render={Lost} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}